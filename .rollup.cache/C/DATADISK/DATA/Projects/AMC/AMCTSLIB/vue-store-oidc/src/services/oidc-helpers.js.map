{"version":3,"file":"oidc-helpers.js","sourceRoot":"","sources":["oidc-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  objectAssign,\r\n  parseJwt,\r\n  firstLetterUppercase,\r\n  camelCaseToSnakeCase,\r\n} from \"./utils\";\r\nimport {\r\n  AccessTokenCallback,\r\n  OidcClient,\r\n  OidcClientSettings,\r\n  UserManager,\r\n  UserManagerEvents,\r\n  UserManagerSettings,\r\n  WebStorageStateStore,\r\n} from \"oidc-client-ts\";\r\nimport type { StoreOidcListeners, StoreOidcClientSettings } from \"../types/vue-store\";\r\n\r\nconst defaultOidcConfig = {\r\n  userStore: new WebStorageStateStore(),\r\n  loadUserInfo: true,\r\n  automaticSilentSignin: true,\r\n};\r\n\r\nconst requiredConfigProperties = [\r\n  \"authority\",\r\n  \"client_id\",\r\n  \"redirect_uri\",\r\n  \"response_type\",\r\n  \"scope\",\r\n];\r\n\r\nconst settingsThatAreSnakeCasedInOidcClient = [\r\n  \"clientId\",\r\n  \"redirectUri\",\r\n  \"responseType\",\r\n  \"maxAge\",\r\n  \"uiLocales\",\r\n  \"loginHint\",\r\n  \"acrValues\",\r\n  \"postLogoutRedirectUri\",\r\n  \"popupRedirectUri\",\r\n  \"silentRedirectUri\",\r\n];\r\n\r\ntype TClientSettingsKey = keyof OidcClientSettings;\r\n\r\nconst snakeCasedSettings = (oidcSettings: OidcClientSettings) => {\r\n  let snakeCasedOidcSettings: any = null;\r\n  settingsThatAreSnakeCasedInOidcClient.forEach((setting: string) => {\r\n    if (typeof oidcSettings[setting as TClientSettingsKey] !== \"undefined\") {\r\n      snakeCasedOidcSettings[camelCaseToSnakeCase(setting)] =\r\n        oidcSettings[setting as TClientSettingsKey];\r\n    }\r\n  });\r\n  return oidcSettings;\r\n};\r\n\r\nexport const getOidcConfig = (oidcSettings: OidcClientSettings) => {\r\n  return objectAssign([\r\n    defaultOidcConfig,\r\n    snakeCasedSettings(oidcSettings),\r\n    { automaticSilentRenew: false }, // automaticSilentRenew is handled in pinia and not by user manager\r\n  ]);\r\n};\r\n\r\nexport const getOidcCallbackPath = (callbackUri: string, routeBase = \"/\") => {\r\n  if (callbackUri) {\r\n    const domainStartsAt = \"://\";\r\n    const hostAndPath = callbackUri.substring(\r\n      callbackUri.indexOf(domainStartsAt) + domainStartsAt.length\r\n    );\r\n    return hostAndPath\r\n      .substring(hostAndPath.indexOf(routeBase) + routeBase.length - 1)\r\n      .replace(/\\/$/, \"\");\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const createUserManager = (oidcSettings: StoreOidcClientSettings) => {\r\n  requiredConfigProperties.forEach((requiredProperty) => {\r\n    if (!oidcSettings[requiredProperty]) {\r\n      throw new Error(\r\n        \"Required oidc setting \" +\r\n          requiredProperty +\r\n          \" missing for creating UserManager\"\r\n      );\r\n    }\r\n  });\r\n  return new UserManager(oidcSettings);\r\n};\r\n\r\nexport const createOidClient = (oidcSettings: StoreOidcClientSettings) => {\r\n  requiredConfigProperties.forEach((requiredProperty) => {\r\n    if (!oidcSettings[requiredProperty]) {\r\n      throw new Error(\r\n        \"Required oidc setting \" +\r\n          requiredProperty +\r\n          \" missing for creating UserManager\"\r\n      );\r\n    }\r\n  });\r\n  return new OidcClient(oidcSettings);\r\n};\r\ntype TUserManagerEventsMethod = keyof UserManagerEvents;\r\nexport const addUserManagerEventListener = (\r\n  oidcUserManager: UserManager,\r\n  eventName: string,\r\n  eventListener: StoreOidcListeners\r\n) => {\r\n  const addFnName = \"add\" + firstLetterUppercase(eventName);\r\n  if (\r\n    typeof oidcUserManager.events[addFnName as TUserManagerEventsMethod] ===\r\n      \"function\" &&\r\n    typeof eventListener === \"function\"\r\n  ) {\r\n    oidcUserManager.events[addFnName as TUserManagerEventsMethod](\r\n      eventListener\r\n    );\r\n  }\r\n};\r\n\r\nexport const removeUserManagerEventListener = (\r\n  oidcUserManager: UserManager,\r\n  eventName: string,\r\n  eventListener: any\r\n) => {\r\n  const removeFnName = \"remove\" + firstLetterUppercase(eventName);\r\n  if (\r\n    typeof oidcUserManager.events[removeFnName as TUserManagerEventsMethod] ===\r\n      \"function\" &&\r\n    typeof eventListener === \"function\"\r\n  ) {\r\n    oidcUserManager.events[removeFnName as TUserManagerEventsMethod](\r\n      eventListener\r\n    );\r\n  }\r\n};\r\n\r\nexport const processSignInCallback = (oidcSettings: OidcClientSettings) => {\r\n  return new Promise((resolve, reject) => {\r\n    const oidcUserManager = createUserManager(oidcSettings);\r\n    oidcUserManager\r\n      .signinRedirectCallback()\r\n      .then((user: any) => {\r\n        resolve(sessionStorage.getItem(\"pinia_oidc_active_route\") || \"/\");\r\n      })\r\n      .catch((err: any) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const tokenExp = (token: string) => {\r\n  if (token) {\r\n    const parsed = parseJwt(token);\r\n    return parsed.exp ? parsed.exp * 1000 : null;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const tokenIsExpired = (token: string) => {\r\n  const tokenExpiryTime = tokenExp(token);\r\n  if (tokenExpiryTime) {\r\n    return tokenExpiryTime < new Date().getTime();\r\n  }\r\n  return false;\r\n};\r\n"]}