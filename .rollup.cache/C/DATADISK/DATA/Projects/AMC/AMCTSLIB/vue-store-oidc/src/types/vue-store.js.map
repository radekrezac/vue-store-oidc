{"version":3,"file":"vue-store.js","sourceRoot":"","sources":["vue-store.ts"],"names":[],"mappings":"","sourcesContent":["\r\nimport type { IdTokenClaims, OidcClientSettings, User } from \"oidc-client-ts\";\r\nimport type { RouteLocationNormalized } from \"vue-router\";\r\n\r\n\r\nexport interface StoreOidcListeners {\r\n  userLoaded?: (user: User) => void;\r\n  userUnloaded?: () => void;\r\n  accessTokenExpiring?: () => void;\r\n  accessTokenExpired?: () => void;\r\n  silentRenewError?: () => void;\r\n  userSignedOut?: () => void;\r\n  oidcError?: (payload?: PayloadType) => void;\r\n  automaticSilentRenewError?: (payload?: PayloadType) => void;\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface OidcSigninSilentOptions { }\r\nexport interface OidcSigninPopupOptions { }\r\n\r\nexport interface OidcSigninRedirectOptions {\r\n  useReplaceToNavigate?: boolean;\r\n  skipUserInfo?: boolean;\r\n  extraQueryParams?: Record<string, any>;\r\n}\r\n\r\nexport interface StoreOidcClientSettings extends OidcClientSettings {\r\n\r\n  loginHint?: string;\r\n  popupRedirectUri?: string;\r\n  silentRedirectUri?: string;\r\n  automaticSilentRenew?: boolean;\r\n  automaticSilentSignin?: boolean;\r\n  extraQueryParams?: Record<string, any>;\r\n  [key: string]: any\r\n}\r\n\r\nexport interface StoreOidcSettings {\r\n  dispatchEventsOnWindow?: boolean;\r\n  isPublicRoute?: (route: RouteLocationNormalized) => boolean;\r\n  publicRoutePaths?: string[];\r\n  routeBase?: string;\r\n  defaultSigninRedirectOptions?: OidcSigninRedirectOptions;\r\n  defaultSigninSilentOptions?: OidcSigninSilentOptions;\r\n  defaultSigninPopupOptions?: OidcSigninPopupOptions;\r\n  isAuthenticatedBy?: \"access_token\" | \"id_token\";\r\n}\r\n\r\nexport interface OidcStoreState {\r\n  access_token: string | null;\r\n  id_token?: string | null;\r\n  refresh_token?: string | null;\r\n  user: IdTokenClaims | null;\r\n  scopes: string[] | null;\r\n  is_checked: boolean;\r\n  events_are_bound: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport interface OidcStoreGetters {\r\n  oidcIsAuthenticated: any | boolean;\r\n  oidcUser: any | null;\r\n  oidcAccesstoken: string | string | null;\r\n  oidcAccessTokenExp: any | number | null;\r\n  oidcScopes: any | string[] | null;\r\n  oidcIdtoken: string | string | null;\r\n  oidcIdTokenExp: any | number | null;\r\n  oidcAuthenticationIsChecked: any | boolean | null;\r\n  oidcError: any | string | null;\r\n  oidcIsRoutePublic: any | boolean;\r\n  oidcRefreshtoken: string | string | null;\r\n  oidcRefreshTokenExp: any | number | null;\r\n}\r\n\r\nexport interface OidcStoreActions {\r\n  oidcCheckAccess: (route: RouteLocationNormalized) => Promise<boolean>;\r\n  authenticateOidc: (payload?: PayloadType) => void;\r\n  authenticateOidcSilent: (payload?: PayloadType) => Promise<User | null>;\r\n  authenticateOidcPopup: (payload?: PayloadType) => Promise<void>;\r\n  oidcSignInCallback: (url?: string) => Promise<string>;\r\n  oidcSignInPopupCallback: (url?: string) => Promise<User | undefined>;\r\n  oidcWasAuthenticated: (user: User | null) => void;\r\n  getUser: () => Promise<User | null>;\r\n  addOidcEventListener: (payload: PayloadType) => void;\r\n  removeOidcEventListener: (payload: PayloadType) => void;\r\n  signOutOidc: (payload?: object) => void;\r\n  signOutOidcCallback: () => void;\r\n  signOutPopupOidc: (payload?: object) => void;\r\n  signOutPopupOidcCallback: () => void;\r\n  signOutOidcSilent: (payload?: object) => Promise<void>;\r\n  storeUser: (user: User | null) => void;\r\n  removeUser: () => void;\r\n  removeUser: () => void;\r\n  clearStaleState: () => void;\r\n}\r\nexport interface OidcStoreMutations {\r\n  setOidcAuth: (user: User) => void;\r\n  setUser: (user: User) => void;\r\n  unsetOidcAuth: () => void;\r\n  setOidcAuthIsChecked: () => void;\r\n  setOidcEventsAreBound: () => void;\r\n  setOidcError: (err: PayloadType | string | null) => void;\r\n}\r\n\r\nexport type OidcStore = OidcStoreState & OidcStoreGetters & OidcStoreActions & OidcStoreMutations\r\nexport type PayloadType = string | { [key: string]: any }\r\n"]}